% Make demographics table for SFM subjects
% KWK - 20200421

% Current dir
options.curDur = pwd;

% Load in subject number list
load('SFMGroupData.mat','datafull','dataAve');
% fileNames = {datafull.fileName};
for i=1:length(datafull)
    options.subj_number(i) = datafull(i).partNum;
    options.partGroup(i) = datafull(i).partGroup;
    options.date_number(i) = datenum(datafull(i).date,'yyyymmdd');
end
options.subj_group_def = 1;

% Make grouping index arrays
grpInd1Bin = [unique(options.subj_number)<2000000]';
grpInd2Bin = [unique(options.subj_number)>=2000000 & unique(options.subj_number)<6000000]';
grpInd3Bin = [unique(options.subj_number)>=6000000]';
grpInd1 = find(grpInd1Bin);
grpInd2 = find(grpInd2Bin);
grpInd3 = find(grpInd3Bin);

% Call MPS phcp_demographics function
cd /home/shaw-raid1/matlab_tools/mpsCode/
options.demoData = phcp_demographics(options);
cd(options.curDur);

% Number of retests per group
options.numRetest(1) = numel(options.subj_number(options.partGroup==1)) - ...
    numel(unique(options.subj_number(options.partGroup==1)));
options.numRetest(2) = numel(options.subj_number(options.partGroup==2)) - ...
    numel(unique(options.subj_number(options.partGroup==2)));
options.numRetest(3) = numel(options.subj_number(options.partGroup==3)) - ...
    numel(unique(options.subj_number(options.partGroup==3)));

%% Demographics
% Make table of demo data for the 3 groups
rowNames = {'Age','Gender','Education','Estimated_IQ','Visual_Acuity'};
columnNames = {sprintf('%s%d%s','g1_',dataAve.numUniquePart(1)),...
    sprintf('%s%d%s','g2_',dataAve.numUniquePart(2)),...
    sprintf('%s%d%s','g3_',dataAve.numUniquePart(3)),...
    'stats'};

g1 = {sprintf('%.3f%s%.3f%s',options.demoData.Age.('g1').mean,'(',options.demoData.Age.('g1').sd,')'),...
    sprintf('%2.0f%s',options.demoData.Gender.('g1').pct_female*100,'%'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Education.('g1').mean,'(',options.demoData.Education.('g1').sd,')'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Estimated_IQ.('g1').mean,'(',options.demoData.Estimated_IQ.('g1').sd,')'),...
    sprintf('%.3f%s%.3f%s',(options.demoData.Visual_Acuity.('g1').mean)/20,'(',options.demoData.Visual_Acuity.('g1').sd,')')}';
g2 = {sprintf('%.3f%s%.3f%s',options.demoData.Age.('g2').mean,'(',options.demoData.Age.('g2').sd,')'),...
    sprintf('%2.0f%s',options.demoData.Gender.('g2').pct_female*100,'%'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Education.('g2').mean,'(',options.demoData.Education.('g2').sd,')'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Estimated_IQ.('g2').mean,'(',options.demoData.Estimated_IQ.('g2').sd,')'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Visual_Acuity.('g2').mean,'(',options.demoData.Visual_Acuity.('g2').sd,')')}';
g3 = {sprintf('%.3f%s%.3f%s',options.demoData.Age.('g3').mean,'(',options.demoData.Age.('g3').sd,')'),...
    sprintf('%2.0f%s',options.demoData.Gender.('g3').pct_female*100,'%'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Education.('g3').mean,'(',options.demoData.Education.('g3').sd,')'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Estimated_IQ.('g3').mean,'(',options.demoData.Estimated_IQ.('g3').sd,')'),...
    sprintf('%.3f%s%.3f%s',options.demoData.Visual_Acuity.('g3').mean,'(',options.demoData.Visual_Acuity.('g3').sd,')')}';
stats = {sprintf('%s%d%s%d%s%1.3f%s%1.3f','F(',options.demoData.Age.('stats'){3,3},',',...
    options.demoData.Age.('stats'){2,3},')=',options.demoData.Age.('stats'){3,6},...
    '; p=',options.demoData.Age.('stats'){3,7}),...
    
    sprintf('%s%d%s%1.3f%s%1.3f','X2(',options.demoData.Gender.('stats').df,')=',...
    options.demoData.Gender.('stats').Chi_squared,'; p=',...
    options.demoData.Gender.('stats').p_value),...
    
    sprintf('%s%d%s%d%s%1.3f%s%1.3f','F(',options.demoData.Education.('stats'){3,3},',',...
    options.demoData.Education.('stats'){2,3},')=',options.demoData.Education.('stats'){3,6},...
    '; p=',options.demoData.Education.('stats'){3,7}),...
    
    sprintf('%s%d%s%d%s%1.3f%s%1.3f','F(',options.demoData.Estimated_IQ.('stats'){3,3},',',...
    options.demoData.Estimated_IQ.('stats'){2,3},')=',options.demoData.Estimated_IQ.('stats'){3,6},...
    '; p=',options.demoData.Estimated_IQ.('stats'){3,7}),...
    
    sprintf('%s%d%s%d%s%1.3f%s%1.3f','F(',options.demoData.Visual_Acuity.('stats'){3,3},',',...
    options.demoData.Visual_Acuity.('stats'){2,3},')=',options.demoData.Visual_Acuity.('stats'){3,6},...
    '; p=',options.demoData.Visual_Acuity.('stats'){3,7})};


T = table(g1,g2,g3,stats,'RowNames',rowNames);
T.Properties.VariableNames = columnNames;

%% now do symptoms
symptom_list = {'Mars contrast','BACS Composite Z Scores',...
    'BPRS Total Score','SGI',...
    'spq total','PID-5 psychoticism','SAPS Total Scores',...
    'SANS Total Scores'};
symptom_short = {'Mars','BACS','BPRS','SGI','SPQ','PID5','SAPS','SANS'};
sym_opt.subj_number = options.subj_number;
sym_opt.date_number = options.date_number;

anova_list = {'Mars','BACS'};
kw_list = {'BPRS','SGI','PID5','SPQ'};

for iS = 1:numel(symptom_list)
    sym_opt.symptom_measure = symptom_list{iS};
    % Call MPS get_phcp_symptoms function
    cd /home/shaw-raid1/matlab_tools/mpsCode/
    sym_out = get_phcp_symptoms(sym_opt);
    cd(options.curDur);
    symptoms.(symptom_short{iS}).data = sym_out.psy_list;
    
    % find group mean, median, sd, range
    group_str = {'g1','g2','g3'};
    group_idx = {grpInd1, grpInd2, grpInd3};
    all_group_idx = [grpInd1; grpInd2; grpInd3];
    
    for iG = 1:3
        symptoms.(symptom_short{iS}).(group_str{iG}).mean = nanmean(symptoms.(...
            symptom_short{iS}).data(group_idx{iG}));
        symptoms.(symptom_short{iS}).(group_str{iG}).median = nanmedian(symptoms.(...
            symptom_short{iS}).data(group_idx{iG}));
        symptoms.(symptom_short{iS}).(group_str{iG}).sd = nanstd(symptoms.(...
            symptom_short{iS}).data(group_idx{iG}));
        symptoms.(symptom_short{iS}).(group_str{iG}).range = [nanmin(symptoms.(...
            symptom_short{iS}).data(group_idx{iG})) nanmax(symptoms.(...
            symptom_short{iS}).data(group_idx{iG}))];
    end
    
    all_data = symptoms.(symptom_short{iS}).data(all_group_idx);
    all_subj = 1:numel(all_data);
    all_group = [ones(numel(grpInd1),1) ; 2*ones(numel(grpInd2),1) ; ...
        3*ones(numel(grpInd3),1)];
    
    if sum(strcmp(symptom_short{iS}, anova_list)) % parameteric test
        % do anova
        nest = zeros(2,2);
        nest(1,2) = 1;
        
        [p, tableDiag, stats] = anovan(all_data(:),{all_subj(:), all_group},'nested',...
            nest,'random',1,'model','full','varnames',{'subj','group'},'display',...
            'off');
            symptoms.(symptom_short{iS}).stats = tableDiag;
    
    elseif sum(strcmp(symptom_short{iS}, kw_list)) % nonparametric test
        [p, tableDiag, stats] = kruskalwallis(all_data(:), all_group(:),...
            'off');
        symptoms.(symptom_short{iS}).stats = tableDiag;
        
    else
        warning([symptom_short{iS} ' missing from kw_list and anova_list, skipping...'])
    end
    
end

% Make table containing relevant stats for diagnosis
rowNames = {'BPRS', 'SPQ', 'BACS'};
columnNames = {sprintf('%s%d%s','g1_',dataAve.numUniquePart(1)),...
    sprintf('%s%d%s','g2_',dataAve.numUniquePart(2)),...
    sprintf('%s%d%s','g3_',dataAve.numUniquePart(3)),...
    'stats'};

g1 = {sprintf('%.3f%s%.3f%s',symptoms.BPRS.('g1').mean,'(',symptoms.BPRS.('g1').sd,')'),...
    sprintf('%.3f%s%.3f%s',symptoms.SPQ.('g1').mean,'(',symptoms.SPQ.('g1').sd,')'),...
    sprintf('%.3f%s%.3f%s',symptoms.BACS.('g1').mean,'(',symptoms.BACS.('g1').sd,')')}';

g2 = {sprintf('%.3f%s%.3f%s',symptoms.BPRS.('g2').mean,'(',symptoms.BPRS.('g2').sd,')'),...
    sprintf('%.3f%s%.3f%s',symptoms.SPQ.('g2').mean,'(',symptoms.SPQ.('g2').sd,')'),...
    sprintf('%.3f%s%.3f%s',symptoms.BACS.('g2').mean,'(',symptoms.BACS.('g2').sd,')')}';

g3 = {sprintf('%.3f%s%.3f%s',symptoms.BPRS.('g3').mean,'(',symptoms.BPRS.('g3').sd,')'),...
    sprintf('%.3f%s%.3f%s',symptoms.SPQ.('g3').mean,'(',symptoms.SPQ.('g3').sd,')'),...
    sprintf('%.3f%s%.3f%s',symptoms.BACS.('g3').mean,'(',symptoms.BACS.('g3').sd,')')}';

stats = {sprintf('%s%d%s%1.3f%s%1.3f','X2(',symptoms.BPRS.('stats'){2,3},...
    ')=',symptoms.BPRS.('stats'){2,5},...
    '; p=',symptoms.BPRS.('stats'){2,6}),...
    
    sprintf('%s%d%s%1.3f%s%1.3f','X2(',symptoms.SPQ.('stats'){2,3},...
    ')=',symptoms.SPQ.('stats'){2,5},...
    '; p=',symptoms.SPQ.('stats'){2,6}),...
    
    sprintf('%s%d%s%d%s%1.3f%s%1.3f','F(',symptoms.BACS.('stats'){3,3},',',...
    symptoms.BACS.('stats'){2,3},')=',symptoms.BACS.('stats'){3,6},...
    '; p=',symptoms.BACS.('stats'){3,7})};


T2 = table(g1,g2,g3,stats,'RowNames',rowNames);
T2.Properties.VariableNames = columnNames;





