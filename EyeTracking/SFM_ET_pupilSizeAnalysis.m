function [data,options] = SFM_ET_pupilSizeAnalysis(data,options)

addpath(genpath('/home/shaw-raid1/matlab_tools/mpsCode'));

%% For all behavioral events, grab X seconds of data before and after
for iB = 1:length(options.runType)   % A/B runs
    for iI = 1:length(data.et.(options.runType{iB}).subjID)   % Subjs
        % Double check the partipant is the same in et and behav
        if data.behav.subjID(iI)==data.et.(options.runType{iB}).subjID(iI)
            % Update which participant
            fprintf('%s%s%s%s%d\n','Finding pupil size data for all ', options.runType{iB}, ' run ', 'events: P',data.et.B.subjID(iI))
            for iZ = 1:size(data.et.(options.runType{iB}).date,2)   % B/Z day
                % Only look at participats/runs that have ET data
                if ~isnan(data.et.(options.runType{iB}).date(iI,iZ))
                    for iJ = 1:length(data.behav.(options.runType{iB}).flipTimes{iI,iZ})   % For each block
                        % Check to make sure there are behav events for this block
                        if ~isempty(data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ})
                            eventCounter = 0;
                            for iE = 1:length(data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ})   % For all behav events
                                % Only look at events that have enough time
                                % before and after the event. (Based on
                                % options.downSampleStart and
                                % options.downSampleEnd.
                                if (data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ}(iE) >= ...
                                        options.downSampleStart) && ...
                                        (data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ}(iE)/2 <= ...
                                        size(data.et.(options.runType{iB}).pupilSize{iI,iZ}{iJ},1) - options.downSampleEnd)
                                    %% Grab pupil size data downsampled at rate that is input
                                    eventCounter = eventCounter+1;
                                    for iT=1:numel(options.timeWindow)
                                        % For left/right
                                        data.pupSize.(options.runType{iB}).pupSizeData{iI,iZ}{iJ}(eventCounter,1:2,iT) = ...
                                            nanmean(data.et.(options.runType{iB}).pupilSize{iI,iZ}{iJ}(...
                                            round([data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ}(iE) + options.timeWindow(iT):...
                                            data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ}(iE) + (options.timeWindow(iT)+options.downSampleBinSpacing)] ./ 2),:));
                                        % For average
                                        data.pupSize.(options.runType{iB}).pupSizeData{iI,iZ}{iJ}(eventCounter,3,iT) = ...
                                            nanmean(data.et.(options.runType{iB}).pupilSize_ave{iI,iZ}{iJ}(...
                                            round([data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ}(iE) + options.timeWindow(iT):...
                                            data.behav.(options.runType{iB}).flipTimes{iI,iZ}{iJ}(iE) + (options.timeWindow(iT)+options.downSampleBinSpacing)] ./ 2)));
                                    end
                                end
                            end
                        else
                        end
                    end
                    
                    % Combine all events across blocks into one array (X total behav events x 3eyes x Y timepoints)
                    data.pupSize.(options.runType{iB}).pupSizeData_allBlocks{iI,iZ} = cat(1,data.pupSize.(options.runType{iB}).pupSizeData{iI,iZ}{:});
                    
                    % For each subj combine across all events
                    holderData.(options.runType{iB}).pupSizeData_aveBlock{iI,iZ} = ...
                        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_allBlocks{iI,iZ},1));                    
                else
                end
            end
        else
            error('Subj ID in behav and et files don''t match!')
        end
    end
end


%% Group average
% Define timing windows
baselineRange = find(options.timeWindow==-6000):find(options.timeWindow==-5000);  % Baseline time
preEventRange = find(options.timeWindow==-1200):find(options.timeWindow==-1000);  % Pre-event time
postEventRange = find(options.timeWindow==-200):find(options.timeWindow==1000);  % Post-event time
for iB=1:size(options.runType,2)   % A/B runs
    % Define new grouping indexing arrays to keep track of bad subjects w/ bad pupSize data
    clear badSubjGrpIdxHolder
    for iJ=1:3
        badSubjGrpIdxHolder{iJ} = boolean(ones([size(data.et.(options.runType{iB}).grpIdx{iJ},1) 1]));
    end
    
    % Turn empty cells into nanarrays to average
    for iI=1:size(holderData.(options.runType{iB}).pupSizeData_aveBlock,1)   % Subjs
        for iZ=1:size(holderData.(options.runType{iB}).pupSizeData_aveBlock,2)   % B/Z
            if isempty(holderData.(options.runType{iB}).pupSizeData_aveBlock{iI,iZ})
                holderData.(options.runType{iB}).pupSizeData_aveBlock{iI,iZ} = ...
                    NaN([3 length(options.timeWindow)]);
            end
            % Restructure holderData into the data structure for easier
            % averaging and use in ANOVAN for stats. 
            data.pupSize.(options.runType{iB}).pupSizeData_aveBlock(iI,iZ,:,:) = ...
                holderData.(options.runType{iB}).pupSizeData_aveBlock{iI,iZ};
        end
        
        % Collapse across B/Z
        data.pupSize.(options.runType{iB}).pupSizeData_aveDay(iI,:,:) = ...
            squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveBlock(iI,:,:,:),2));
        
        %% Filter out subjects with bad data
        % Look for subjects with > 1/2 data points as 0's
        % Count the number of 0's for each subject for left/right/both eyes
        data.pupSize.(options.runType{iB}).numBadDataPoints(iI,:) = ...
            sum(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(iI,:,:))==0,2);
        % If there are more than half 0's in either eye, remove the subject
        if data.pupSize.(options.runType{iB}).numBadDataPoints(iI,1) > ...
                (size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay,3)/2) || ...
                data.pupSize.(options.runType{iB}).numBadDataPoints(iI,2) > ...
                (size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay,3)/2)
            % Set index in group index arrays to 0
            if sum(data.et.(options.runType{iB}).grpIdx{1}==iI)  > 0
                badSubjGrpIdxHolder{1}(data.et.(options.runType{iB}).grpIdx{1}==iI) = 0;
            elseif sum(data.et.(options.runType{iB}).grpIdx{2}==iI)  > 0
                badSubjGrpIdxHolder{2}(data.et.(options.runType{iB}).grpIdx{2}==iI) = 0;
            elseif sum(data.et.(options.runType{iB}).grpIdx{3}==iI) > 0
                badSubjGrpIdxHolder{3}(data.et.(options.runType{iB}).grpIdx{3}==iI) = 0;
            end
        end
    end
    
    % Make new group index arrays that exclude bad subjects
    data.pupSize.(options.runType{iB}).subjIdx = [data.et.(options.runType{iB}).grpIdx{1}(badSubjGrpIdxHolder{1}); ...
        data.et.(options.runType{iB}).grpIdx{2}(badSubjGrpIdxHolder{2}); ...
        data.et.(options.runType{iB}).grpIdx{3}(badSubjGrpIdxHolder{3})];
    for iJ=1:3
        data.pupSize.(options.runType{iB}).grpIdx{iJ} =...
            data.et.(options.runType{iB}).grpIdx{iJ}(badSubjGrpIdxHolder{iJ});
    end
    
    %% Collapse across participant group and all participants for raw data
    % Collapse across subjects
    % All subj
    data.pupSize.(options.runType{iB}).pupSizeData_aveFull(:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
        data.pupSize.(options.runType{iB}).subjIdx,:,:),1));   % Ave
    data.pupSize.(options.runType{iB}).pupSizeData_steFull(:,:) = ...
        squeeze(nanstd(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
        data.pupSize.(options.runType{iB}).subjIdx,:,:),1)) ./ ...
        sqrt(size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
        data.pupSize.(options.runType{iB}).subjIdx,:,:),1));   % STE
    % Break down into groups
    for iI=1:3
        data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(iI,:,:) = ...
            nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(data.pupSize.(options.runType{iB}).grpIdx{iI},:,:),1);   % Ave
        data.pupSize.(options.runType{iB}).pupSizeData_steGrp(iI,:,:) = ...
            nanstd(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(data.pupSize.(options.runType{iB}).grpIdx{iI},:,:),1) ./ ...
            sqrt(length(data.pupSize.(options.runType{iB}).grpIdx{iI}));   % STE
    end
    
    
    %% Baseline correction
    % Do 'baseline' correction
    % Average baseline for individual particpants
    data.pupSize.(options.runType{iB}).baselineAve(:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(:,:,baselineRange),3));
    
    % Average baseline for individual participants for B/Z day seperatly
    % for ANOVAN
    data.pupSize.(options.runType{iB}).baselineAve_BZ(:,:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveBlock(:,:,:,baselineRange),4));
    
    % Baseline correct
    for iI=1:size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(:,:,:),1)   % Participant
        for iE=1:size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay,2)   % left/right/both
            data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(iI,iE,:) = ...
                ((data.pupSize.(options.runType{iB}).pupSizeData_aveDay(iI,iE,:) - ...
                data.pupSize.(options.runType{iB}).baselineAve(iI,iE)) ./ ...
                data.pupSize.(options.runType{iB}).baselineAve(iI,iE)) .*100;
            
            % Correct B/Z days seperatly 
            for iZ=1:size(data.pupSize.(options.runType{iB}).baselineAve_BZ,2)
                data.pupSize.(options.runType{iB}).pupSizeData_aveBlock_corr(iI,iZ,iE,:) = ...
                    ((data.pupSize.(options.runType{iB}).pupSizeData_aveBlock(iI,iZ,iE,:) - ...
                    data.pupSize.(options.runType{iB}).baselineAve_BZ(iI,iZ,iE)) ./ ...
                    data.pupSize.(options.runType{iB}).baselineAve_BZ(iI,iZ,iE)) .*100;
            end
        end
    end
    
    %% Collapse across participant group and all participants for BLC'ed data
    % Collapse across subjects
    % All subj
    data.pupSize.(options.runType{iB}).pupSizeData_aveFull_corr(:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
        data.pupSize.(options.runType{iB}).subjIdx,:,:),1));   % Ave
    data.pupSize.(options.runType{iB}).pupSizeData_steFull_corr(:,:) = ...
        squeeze(nanstd(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
        data.pupSize.(options.runType{iB}).subjIdx,:,:),1)) ./ ...
        sqrt(size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
        data.pupSize.(options.runType{iB}).subjIdx,:,:),1));   % STE
    % Break down into groups
    for iI=1:3
        data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(iI,:,:) = ...
            nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(data.pupSize.(options.runType{iB}).grpIdx{iI},:,:),1);   % Ave
        data.pupSize.(options.runType{iB}).pupSizeData_steGrp_corr(iI,:,:) = ...
            nanstd(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(data.pupSize.(options.runType{iB}).grpIdx{iI},:,:),1) ./ ...
            sqrt(length(data.pupSize.(options.runType{iB}).grpIdx{iI}));   % STE
    end
    
    %% Find average of pre and post swtich periods
    % Average values for pre and post switch using corrected values for all participants
    data.pupSize.(options.runType{iB}).pupSize_preSwitch(:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(:,:,preEventRange),3));
    data.pupSize.(options.runType{iB}).pupSize_postSwitch(:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(:,:,postEventRange),3));
    
    % Average values for corrected pre/post switch for all participants for B/Z visits seperatly
    data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(:,:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveBlock_corr(:,:,:,preEventRange),4));
    data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(:,:,:) = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveBlock_corr(:,:,:,postEventRange),4));
    
    % Average across subjects
    % All subjects
    % Pre switch
    data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveFull_corr = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
        data.pupSize.(options.runType{iB}).subjIdx,:),1));   % Ave
    data.pupSize.(options.runType{iB}).pupSize_preSwitch_steFull_corr = ...
        squeeze(nanstd(data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
        data.pupSize.(options.runType{iB}).subjIdx,:),1)) ./ ...
        sqrt(size(data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
        data.pupSize.(options.runType{iB}).subjIdx,:),1));   % STE
    % Post switch
    data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveFull_corr = ...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
        data.pupSize.(options.runType{iB}).subjIdx,:),1));   % Ave
    data.pupSize.(options.runType{iB}).pupSize_postSwitch_steFull_corr = ...
        squeeze(nanstd(data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
        data.pupSize.(options.runType{iB}).subjIdx,:),1)) ./ ...
        sqrt(size(data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
        data.pupSize.(options.runType{iB}).subjIdx,:),1));   % STE
    
    % Break down into groups
    for iI=1:3
        % Pre switch
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(iI,:) = ...
            squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
            data.pupSize.(options.runType{iB}).grpIdx{iI},:),1));   % Ave
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(iI,:) = ...
            squeeze(nanstd(data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
            data.pupSize.(options.runType{iB}).grpIdx{iI},:),1)) ./ ...
            sqrt(length(data.pupSize.(options.runType{iB}).grpIdx{iI}));    % STE
        % Post switch
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(iI,:) = ...
            squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
            data.pupSize.(options.runType{iB}).grpIdx{iI},:),1));   % Ave
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(iI,:) = ...
            squeeze(nanstd(data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
            data.pupSize.(options.runType{iB}).grpIdx{iI},:),1)) ./ ...
            sqrt(length(data.pupSize.(options.runType{iB}).grpIdx{iI}));    % STE
    end
end
clear holderData

%% Stats
%% Ttest on each time point vs 0
for iB=1:length(options.runType)
    %% Compare across timepoints
    for iJ=1:size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr,2)   % For left/right/both eyes
        for iT=1:size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr,3)   % For all timepoints
            % All part
            [data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(iJ,iT),...
                data.pupSize.(options.runType{iB}).stats.ttest.P_allTimeFull_Corr(iJ,iT),~,...
                data.pupSize.(options.runType{iB}).stats.ttest.Stats_allTimeFull_Corr(iJ,iT)] = ...
                ttest(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
                data.pupSize.(options.runType{iB}).subjIdx,iJ,iT));
            % Controls
            [data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,iJ,iT),...
                data.pupSize.(options.runType{iB}).stats.ttest.P_allTimeGrp_Corr(1,iJ,iT),~,...
                data.pupSize.(options.runType{iB}).stats.ttest.Stats_allTimeGrp_Corr(1,iJ,iT)] = ...
                ttest(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
                data.pupSize.(options.runType{iB}).grpIdx{1},iJ,iT));
            % Relatives
            [data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,iJ,iT),...
                data.pupSize.(options.runType{iB}).stats.ttest.P_allTimeGrp_Corr(2,iJ,iT),~,...
                data.pupSize.(options.runType{iB}).stats.ttest.Stats_allTimeGrp_Corr(2,iJ,iT)] = ...
                ttest(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
                data.pupSize.(options.runType{iB}).grpIdx{2},iJ,iT));
            % Psychosis
            [data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,iJ,iT),...
                data.pupSize.(options.runType{iB}).stats.ttest.P_allTimeGrp_Corr(3,iJ,iT),~,...
                data.pupSize.(options.runType{iB}).stats.ttest.Stats_allTimeGrp_Corr(3,iJ,iT)] = ...
                ttest(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
                data.pupSize.(options.runType{iB}).grpIdx{3},iJ,iT));
        end
    end
    
    %% Compare pre/post event windows
    for iZ=1:size(data.pupSize.(options.runType{iB}).pupSize_preSwitch,2)   % Left/right/both
        %% Compare pre/post event windows w/in groups
        % All subj
        [data.pupSize.(options.runType{iB}).stats.ttest.Sig_prePostFull_Corr(iZ),...
            data.pupSize.(options.runType{iB}).stats.ttest.P_prePostFull_Corr(iZ),~,...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostFull_Corr(iZ)] = ...
            ttest(data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).subjIdx,iZ),...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).subjIdx,iZ));
        % By group
        for iJ=1:3   % Controls/Relatives/Psychosis
            [data.pupSize.(options.runType{iB}).stats.ttest.Sig_prePostGrp_Corr(iZ,iJ),...
                data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(iZ,iJ),~,...
                data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(iZ,iJ)] = ...
                ttest(data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).grpIdx{iJ},iZ),...
                data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).grpIdx{iJ},iZ));
        end
    end
    
    %% Compare pre events between groups
    clear all_data grouping participant nest
    all_data = cat(3,[data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},1,1), ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},2,1); ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},1,1), ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},2,1); ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},1,1), ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},2,1)],...
        [data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},1,2), ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},2,2); ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},1,2), ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},2,2); ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},1,2), ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},2,2)]);
    grouping = repmat([ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{2}) 1])+1;...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+2],[1 2 2]);
    participant = repmat([1:length(grouping)]',[1 2 2]);
    nest = zeros(2,2);
    nest(2,1) = 1;
    [data.pupSize.(options.runType{iB}).stats.anova1.Sig_preEvent_Corr(:),...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_preEvent_Corr] = ...
        anovan(all_data(:),{grouping(:),participant(:)},'random',2,'nested',nest,...
        'varnames',{'group','participant'},'display','off');
    
    % Run 3-KW Test
    clear all_data grouping
    all_data = [data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).grpIdx{1},3);...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).grpIdx{2},3);...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).grpIdx{3},3)];
    grouping = [ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{2}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+1];
    [data.pupSize.(options.runType{iB}).stats.KW3.Sig_preEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW3.Table_preEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW3.Stats_preEvent_Corr] = ...
        kruskalwallis(all_data,grouping,'off');
    
    %% Compare post events between groups
    clear all_data grouping participant nest
    all_data = cat(3,[data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},1,1), ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},2,1); ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},1,1), ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},2,1); ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},1,1), ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},2,1)],...
        [data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},1,2), ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},2,2); ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},1,2), ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{2},2,2); ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},1,2), ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},2,2)]);
    grouping = repmat([ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{2}) 1])+1;...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+2],[1 2 2]);
    participant = repmat([1:length(grouping)]',[1 2 2]);
    nest = zeros(2,2);
    nest(2,1) = 1;
    [data.pupSize.(options.runType{iB}).stats.anova1.Sig_postEvent_Corr(:),...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_postEvent_Corr] = ...
        anovan(all_data(:),{grouping(:),participant(:)},'random',2,'nested',nest,...
        'varnames',{'group','participant'},'display','off');
    
    % Run 3-KW Test
    clear all_data grouping
    all_data = [data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).grpIdx{1},3);...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).grpIdx{2},3);...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).grpIdx{3},3)];
    grouping = [ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{2}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+1];
    [data.pupSize.(options.runType{iB}).stats.KW3.Sig_postEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW3.Table_postEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW3.Stats_postEvent_Corr] = ...
        kruskalwallis(all_data,grouping,'off');
    
    %% Run KW and ttest between controls and psychosis for pre event
    % Run ttest
    clear all_data grouping
    all_data = [data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).grpIdx{1},3);...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch(data.pupSize.(options.runType{iB}).grpIdx{3},3)];
    grouping = [ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+1];
    [data.pupSize.(options.runType{iB}).stats.ttest.Sig_preGrp_Corr,...
        data.pupSize.(options.runType{iB}).stats.ttest.P_preGrp_Corr,~,...
        data.pupSize.(options.runType{iB}).stats.ttest.Stats_preGrp_Corr] = ...
        ttest(all_data);
    
    % Run 2-KW Test
    [data.pupSize.(options.runType{iB}).stats.KW2.Sig_preEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW2.Table_preEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW2.Stats_preEvent_Corr] = ...
        kruskalwallis(all_data,grouping,'off');


%     % Run ANOVAN
%     clear all_data grouping participant nest
%     all_data = [data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},1,iZ), ...
%         data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{1},2,iZ); ...
%         data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},1,iZ), ...
%         data.pupSize.(options.runType{iB}).pupSize_preSwitch_BZ(data.pupSize.(options.runType{iB}).grpIdx{3},2,iZ)];
%     grouping = repmat([ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
%         ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+1],[1 2]);
%     participant = repmat([1:length(grouping)]',[1 2]);
%     nest = zeros(2,2);
%     nest(2,1) = 1;
%     [data.pupSize.(options.runType{iB}).stats.anova1.Sig_preEvent_Corr(iZ,:),...
%         data.pupSize.(options.runType{iB}).stats.anova1.Table_preEvent_Corr{iZ}] = ...
%         anovan(all_data(:),{grouping(:),participant(:)},'random',2,'nested',nest,...
%         'varnames',{'group','participant'},'display','off');
    
    %% Run ANOVAN and ttest between controls and psychosis for post event
    % Run ttest
    clear all_data grouping
    all_data = [data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).grpIdx{1},3);...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch(data.pupSize.(options.runType{iB}).grpIdx{3},3)];
    grouping = [ones([length(data.pupSize.(options.runType{iB}).grpIdx{1}) 1]);...
        ones([length(data.pupSize.(options.runType{iB}).grpIdx{3}) 1])+1];
    [data.pupSize.(options.runType{iB}).stats.ttest.Sig_postEvent_Corr,...
        data.pupSize.(options.runType{iB}).stats.ttest.P_postEvent_Corr,~,...
        data.pupSize.(options.runType{iB}).stats.ttest.Stats_postEvent_Corr] = ...
        ttest(all_data);
    

    % Run 2-KW Test
    [data.pupSize.(options.runType{iB}).stats.KW2.Sig_postEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW2.Table_postEvent_Corr, ...
        data.pupSize.(options.runType{iB}).stats.KW2.Stats_postEvent_Corr] = ...
        kruskalwallis(all_data,grouping,'off');
    
    %% Look at correlations between average pre event pupil size and switch rate
    % Switch rate data: data.behav.B.Hz_flips_aveFull(:)
    [data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_r,...
        data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_p] = ...
        corr(log10(data.behav.(options.runType{iB}).Hz_flips_aveFull)',...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(:,3,preEventRange),3)),...
        'rows','complete','type','Spearman');
    
    % Look at correlations between average pre event pupil size and switch rate
    % Switch rate data: data.behav.B.Hz_flips_aveFull(:)
    [data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_r,...
        data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_p] = ...
        corr(log10(data.behav.(options.runType{iB}).Hz_flips_aveFull)',...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(:,3,postEventRange),3)),...
        'rows','complete','type','Spearman');
    
    % Correlations for PwPP alone - post
    [data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_r_PwPP,...
        data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_p_PwPP] = ...
        corr(log10(data.behav.(options.runType{iB}).Hz_flips_aveFull(data.behav.grpIdx{3}))',...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(data.behav.grpIdx{3},3,postEventRange),3)),...
        'rows','complete','type','Spearman');
    
    [data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_r_PwPP,...
        data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_p_PwPP] = ...
        corr(log10(data.behav.(options.runType{iB}).Hz_flips_aveFull(data.behav.grpIdx{3}))',...
        squeeze(nanmean(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(data.behav.grpIdx{3},3,preEventRange),3)),...
        'rows','complete','type','Spearman');
    
end

%% Plot scatter plots between switch rates and pre/post event pupil size averages
if options.displayETFigs
    %     for iB = 1:size(options.runType,2)
    for iB = 2
        scatterPlotFig(iB) = figure();
        figSize.baseSize = get(0,'Screensize');   % Base size in pixels
        figSize.aspectRatio = [8.638 4.3222];   % Aspect ratio
        figSize.figSize = [0 0 ...
            figSize.baseSize(3)*.75 ...
            (figSize.baseSize(3)*.75)*(figSize.aspectRatio(2)/figSize.aspectRatio(1))];   % Size/postion of fig
        set(gcf,'color','w')
        set(gcf,'Position', figSize.figSize)
        %% Pre event
        subplot(1,2,1)
        % Calculate a trend line
        data_Hz = data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            :)';
        data_pupSize = squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            :,3,preEventRange),3));
        [poly_fit] = polyfit(data_Hz, data_pupSize, 1);
        fit_x = [min(data_Hz) max(data_Hz)];
        fit_y = poly_fit(1).*fit_x + poly_fit(2);
                
        % Plot scatter for each group in seperate colors
        % Controls
        scatter(data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            data.pupSize.(options.runType{iB}).grpIdx{1})',...
            squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).grpIdx{1},3,preEventRange),3)),'g');
        hold on
        % Relatives
        scatter(data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            data.pupSize.(options.runType{iB}).grpIdx{2})',...
            squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).grpIdx{2},3,preEventRange),3)),'b');
        % Psychosis
        scatter(data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            data.pupSize.(options.runType{iB}).grpIdx{3})',...
            squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).grpIdx{3},3,preEventRange),3)),'r');
        
        % Plot fit line
        plot(fit_x,fit_y,'k-','linewidth',2)
        
        % Plot the correlation
        if data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_p<0.001
            pPlotHolder1 = sprintf('%s%.3f','p<',0.001);
        else
            pPlotHolder1 = sprintf('%s%.3f','p=',...
                data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_p);
        end
        text(.25,23,...
            sprintf('%s%.3f\n%s%.3f','r=',data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePre_r,...
            pPlotHolder1));
        clear pPlotHolder1
        
        if iB == 1
            title(sprintf('%s\n%s','Average Pupil Size Pre Event and',...
                'Switch Rate Correlation (Real Switch)'))
        elseif iB == 2
            title(sprintf('%s\n%s','Average Pupil Size Pre Event and',...
                'Switch Rate Correlation (Illusory Switch)'))
        end
        
        set(gca,'ylim',[-10 25]);
        set(gca,'XScale','log','xtick',[0.01 0.025 0.05 0.1 0.25 0.5])
        ylabel(sprintf('%s\n%s','Pupil Size','Pre-event (% change)'),'fontsize',12)
        xlabel('Switch Rate (Hz)')
        
        clear fit_x fit_y poly_fit data_Hz data_pupSize
        
        %% Pre event
        subplot(1,2,2)
        % Calculate a trend line
        data_Hz = data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            :)';
        data_pupSize = squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            :,3,postEventRange),3));
        [poly_fit] = polyfit(data_Hz, data_pupSize, 1);
        fit_x = [min(data_Hz) max(data_Hz)];
        fit_y = poly_fit(1).*fit_x + poly_fit(2);
        
        % Plot scatter for each group in seperate colors
        % Controls
        scatter(data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            data.pupSize.(options.runType{iB}).grpIdx{1})',...
            squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).grpIdx{1},3,postEventRange),3)),'g');
        hold on
        % Relatives
        scatter(data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            data.pupSize.(options.runType{iB}).grpIdx{2})',...
            squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).grpIdx{2},3,postEventRange),3)),'b');
        % Psychosis
        scatter(data.behav.(options.runType{iB}).Hz_flips_aveFull(1,...
            data.pupSize.(options.runType{iB}).grpIdx{3})',...
            squeeze(nanmean(data.pupSize.B.pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).grpIdx{3},3,postEventRange),3)),'r');
        
        % Plot fit line
        plot(fit_x,fit_y,'k-','linewidth',2)
        
        % Plot the correlation
        if data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_p<0.001
            pPlotHolder1 = sprintf('%s%.3f','p<',0.001);
        else
            pPlotHolder1 = sprintf('%s%.3f','p=',...
                data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_p);
        end
        text(.25,23,...
            sprintf('%s%.3f\n%s%.3f','r=',data.pupSize.(options.runType{iB}).stats.corr_switch_pupSizePost_r,...
            pPlotHolder1));
        
        if iB == 1
            title(sprintf('%s\n%s','Average Pupil Size Post Event and',...
                'Switch Rate Correlation (Real Switch)'))
        elseif iB == 2
            title(sprintf('%s\n%s','Average Pupil Size Post Event and',...
                'Switch Rate Correlation (Illusory Switch)'))
        end
        
        set(gca,'ylim',[-10 25]);
        set(gca,'XScale','log','xtick',[0.01 0.025 0.05 0.1 0.25 0.5])
        ylabel(sprintf('%s\n%s','Pupil Size','Post-event (% change)'),'fontsize',12)
        xlabel('Switch Rate (Hz)')
        
        clear fit_x fit_y poly_fit data_Hz data_pupSize
        
        box off
        set(gca,'XColor','k','YColor','k')
    end
end

%% Plot raw data heatmaps and averages
if options.displayETFigs
    for iB = 1:size(options.runType,2)
        rawPupSizeFig(iB) = figure();
        figSize.baseSize = get(0,'Screensize');   % Base size in pixels
        figSize.aspectRatio = [10.9849 9.2814];   % Aspect ratio
        figSize.figSize = [0 0 ...
            figSize.baseSize(3)...
            figSize.baseSize(4)];   % Size/postion of fig
        set(gcf,'color','w')
        set(gcf,'Position', figSize.figSize)
        
        %% Left eye
        subplot(5,4,[1 2 5 6 9 10])
        % Plot heatmaps
        imagesc(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
            data.pupSize.(options.runType{iB}).subjIdx,1,:)))
        hold on
        plotSquareOffsetBottom = .5;
        plotSquareOffsetTop = .25;
        % Plot divider lines to seperate groups
        % Controls
        plotSquareCoordsX = [1, 1, length(options.timeWindow), length(options.timeWindow), 1];
        plotSquareCoordsY = [0+plotSquareOffsetBottom, size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop, 0+plotSquareOffsetBottom, 0+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'g','LineWidth',1.5)
        % Relatives
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'b','LineWidth',1.5)
        % Psychosis
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'r','LineWidth',1.5)
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
            data.pupSize.(options.runType{iB}).subjIdx,:,:),1)],'w','LineWidth',1.5)
        
        title('Left Eye')
        set(gca,'YDir','normal',...
            'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ticklength',[0 0])
        box off
        colorbar()
        % set(gca,'XColor','w','YColor','w')
        
        % Plot average
        subplot(5,4,[13 14])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(1,1,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(2,1,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(3,1,:)),'Color',[1 0 0])
        plot(data.pupSize.(options.runType{iB}).pupSizeData_aveFull(1,:),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 max(max(max(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))],'k','LineWidth',1.5)
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',[min(min(min(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))...
            max(max(max(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))])
        legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Before and After Reported Switch (Real Switch)')
        elseif iB == 2
            title('Pupil Size Before and After Reported Switch (Illusory Switch)')
        end
        box off
        set(gca,'XColor','k','YColor','k')
        
        %% Right eye
        subplot(5,4,[3 4 7 8 11 12])
        % Plot heatmaps
        imagesc(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
            data.pupSize.(options.runType{iB}).subjIdx,2,:)))
        hold on
        plotSquareOffsetBottom = .5;
        plotSquareOffsetTop = .25;
        % Plot divider lines to seperate groups
        % Controls
        plotSquareCoordsX = [1, 1, length(options.timeWindow), length(options.timeWindow), 1];
        plotSquareCoordsY = [0+plotSquareOffsetBottom, size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop, 0+plotSquareOffsetBottom, 0+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'g','LineWidth',1.5)
        % Relatives
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'b','LineWidth',1.5)
        % Psychosis
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'r','LineWidth',1.5)
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay(...
            data.pupSize.(options.runType{iB}).subjIdx,:,:),1)],'w','LineWidth',1.5)
        
        title('Right Eye')
        set(gca,'YDir','normal',...
            'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ticklength',[0 0])
        box off
        colorbar()
        % set(gca,'XColor','w','YColor','w')
        
        % Plot average
        subplot(5,4,[15 16])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(1,2,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(2,2,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(3,2,:)),'Color',[1 0 0])
        plot(data.pupSize.(options.runType{iB}).pupSizeData_aveFull(2,:),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 max(max(max(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))],'k','LineWidth',1.5)
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',[min(min(min(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))...
            max(max(max(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))])
        legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Before and After Reported Switch (Real Switch)')
        elseif iB == 2
            title('Pupil Size Before and After Reported Switch (Illusory Switch)')
        end
        box off
        set(gca,'XColor','k','YColor','k')
        
        %% Plot average of both eyes
        subplot(5,4,[17:20])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(1,3,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(2,3,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp(3,3,:)),'Color',[1 0 0])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveFull(3,:)),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],[0 max(max(max(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))],'k','LineWidth',1.5)
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',[min(min(min(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))...
            max(max(max(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp)))])
        legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Before and After Reported Switch (Ave of Both Eyes, Real Switch)')
        elseif iB == 2
            title('Pupil Size Before and After Reported Switch (Ave of Both Eyes, Illusory Switch)')
        end
        box off
        set(gca,'XColor','k','YColor','k')
    end
end

%% Plot corrected values for all participants for left/right eyes seperately
yRangeCorr(1,:) = [-10 15];
yRangeCorr(2,:) = [-7.5 7.5];
yRangeCorrOffset = .75;
if options.displayETFigs
    for iB = 1:size(options.runType,2)
        corrPupSizeFig(iB) = figure();
        figSize.baseSize = get(0,'Screensize');   % Base size in pixels
        figSize.aspectRatio = [10.9849 9.2814];   % Aspect ratio
        figSize.figSize = [0 0 ...
            figSize.baseSize(3)...
            figSize.baseSize(4)];   % Size/postion of fig
        set(gcf,'color','w')
        set(gcf,'Position', figSize.figSize)
        
        %% Left eye
        subplot(5,4,[1 2 5 6 9 10])
        % Plot heatmaps
        imagesc(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).subjIdx,1,:)))
        hold on
        plotSquareOffsetBottom = .5;
        plotSquareOffsetTop = .25;
        % Plot divider lines to seperate groups
        % Controls
        plotSquareCoordsX = [0.5, 0.5, length(options.timeWindow), length(options.timeWindow), 1];
        plotSquareCoordsY = [0+plotSquareOffsetBottom, size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop, 0+plotSquareOffsetBottom, 0+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'g','LineWidth',1.5)
        % Relatives
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'b','LineWidth',1.5)
        % Psychosis
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'r','LineWidth',1.5)
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).subjIdx,:,:),1)],'w','LineWidth',1.5)
               
        title('Left Eye')
        set(gca,'YDir','normal',...
            'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ticklength',[0 0],...
            'clim',yRangeCorr(iB,:))
        box off
        colorbar()
        % set(gca,'XColor','w','YColor','w')
        
        % Plot average
        subplot(5,4,[13 14])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(1,1,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(2,1,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(3,1,:)),'Color',[1 0 0])
        plot(data.pupSize.(options.runType{iB}).pupSizeData_aveFull_corr(1,:),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Plot significance markers
        % Full average
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(1,:),2)]) + yRangeCorr(iB,2)-yRangeCorrOffset; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(1,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 0],'LineWidth',1.5)
        clear plotMarker
        % Control
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,1,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*2; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,1,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 1 0],'LineWidth',1.5)
        clear plotMarker
        % Relatives
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,1,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*3; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,1,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 1],'LineWidth',1.5)
        clear plotMarker
        % Psychosis
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,1,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*4; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,1,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[1 0 0],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',yRangeCorr(iB,:))
        legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Surrounding Reported Switch (Real Switch)')
        elseif iB == 2
            title('Pupil Size Surrounding Reported Switch (Illusory Switch)')
        end
        box off
        set(gca,'XColor','k','YColor','k')
        
        %% Right eye
        subplot(5,4,[3 4 7 8 11 12])
        % Plot heatmaps
        imagesc(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).subjIdx,2,:)))
        hold on
        plotSquareOffsetBottom = .5;
        plotSquareOffsetTop = .25;
        % Plot divider lines to seperate groups
        % Controls
        plotSquareCoordsX = [0.5, 0.5, length(options.timeWindow), length(options.timeWindow), 1];
        plotSquareCoordsY = [0+plotSquareOffsetBottom, size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop, 0+plotSquareOffsetBottom, 0+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'g','LineWidth',1.5)
        % Relatives
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'b','LineWidth',1.5)
        % Psychosis
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'r','LineWidth',1.5)
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).subjIdx,:,:),1)],'w','LineWidth',1.5)
        
        title('Right Eye')
        set(gca,'YDir','normal',...
            'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ticklength',[0 0],...
            'clim',yRangeCorr(iB,:))
        box off
        colorbar()
        % set(gca,'XColor','w','YColor','w')
        
        % Plot average
        subplot(5,4,[15 16])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(1,2,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(2,2,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(3,2,:)),'Color',[1 0 0])
        plot(data.pupSize.(options.runType{iB}).pupSizeData_aveFull_corr(2,:),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Plot significance markers
        % Full average
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(2,:),2)]) + yRangeCorr(iB,2)-yRangeCorrOffset; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(2,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 0],'LineWidth',1.5)
        clear plotMarker
        % Control
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,2,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*2; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,2,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 1 0],'LineWidth',1.5)
        clear plotMarker
        % Relatives
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,2,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*3; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,2,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 1],'LineWidth',1.5)
        clear plotMarker
        % Psychosis
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,2,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*4; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,2,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[1 0 0],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',yRangeCorr(iB,:))
        legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Surrounding Reported Switch (Real Switch)')
        elseif iB == 2
            title('Pupil Size Surrounding Reported Switch (Illusory Switch)')
        end
        box off
        set(gca,'XColor','k','YColor','k')
        
        %% Plot average of both eyes
        subplot(5,4,[17:20])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(1,3,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(2,3,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(3,3,:)),'Color',[1 0 0])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveFull_corr(3,:)),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Plot significance markers
        % Full average
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(3,:),2)]) + yRangeCorr(iB,2)-yRangeCorrOffset; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 0],'LineWidth',1.5)
        clear plotMarker
        % Control
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,3,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*2; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 1 0],'LineWidth',1.5)
        clear plotMarker
        % Relatives
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,3,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*3; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 1],'LineWidth',1.5)
        clear plotMarker
        % Psychosis
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,3,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*4; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[1 0 0],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',yRangeCorr(iB,:))
        legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Surrounding Reported Switch (Ave of Both Eyes, Real Switch)')
        elseif iB == 2
            title('Pupil Size Surrounding Reported Switch (Ave of Both Eyes, Illusory Switch)')
        end
        box off
        set(gca,'XColor','k','YColor','k')
    end
end

%% Plot corrected values for all participants for average between both eyes only
yRangeCorr(1,:) = [-10 15];
yRangeCorr(2,:) = [-7.5 7.5];
yRangeCorrOffset = .75;
if options.displayETFigs
    for iB = 1:size(options.runType,2)
        corrPupSizeFigComb(iB) = figure();
        figS1ize.baseSize = get(0,'Screensize');   % Base size in pixels
        figSize.aspectRatio = [10.9849 9.2814];   % Aspect ratio
        figSize.figSize = [0 0 ...
            figSize.baseSize(3)...
            figSize.baseSize(4)];   % Size/postion of fig
        set(gcf,'color','w')
        set(gcf,'Position', figSize.figSize)
        
        %% Heatmaps
        subplot(4,4,[1:12])
        % Plot heatmaps
        imagesc(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).subjIdx,3,:)))
        hold on
        plotSquareOffsetBottom = .5;
        plotSquareOffsetTop = .25;
        % Plot divider lines to seperate groups
        % Controls
        plotSquareCoordsX = [0.5, 0.5, length(options.timeWindow), length(options.timeWindow), 1];
        plotSquareCoordsY = [0+plotSquareOffsetBottom, size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop, 0+plotSquareOffsetBottom, 0+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'g','LineWidth',1.5)
        % Relatives
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'b','LineWidth',1.5)
        % Psychosis
        plotSquareCoordsY = [size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{3},1)+size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetTop,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom,...
            size(data.pupSize.(options.runType{iB}).grpIdx{2},1)+size(data.pupSize.(options.runType{iB}).grpIdx{1},1)+plotSquareOffsetBottom];
        plot(plotSquareCoordsX,plotSquareCoordsY,'r','LineWidth',1.5)
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            [0 size(data.pupSize.(options.runType{iB}).pupSizeData_aveDay_corr(...
            data.pupSize.(options.runType{iB}).subjIdx,:,:),1)],'w','LineWidth',1.5)
               
        if iB == 1
            title('Average Size of Both Eyes (Real Switch Task)')
        elseif iB == 2
            title('Average Size of Both Eyes (Illusory Switch Task)')
        end
        ylabel('Participant')
        set(gca,'YDir','normal',...
            'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ticklength',[0 0],...
            'clim',yRangeCorr(iB,:))
        box off
        colorbar()
        % set(gca,'XColor','w','YColor','w')
        
        % Plot average
        subplot(4,4,[13:16])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(1,3,:)),'Color',[0 1 0])
        hold on
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(2,3,:)),'Color',[0 0 1])
        plot(squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(3,3,:)),'Color',[1 0 0])
        plot(data.pupSize.(options.runType{iB}).pupSizeData_aveFull_corr(1,:),'--','Color',[0 0 0])
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Plot significance markers
        % Full average
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(3,:),2)]) + yRangeCorr(iB,2)-yRangeCorrOffset; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 0],'LineWidth',1.5)
        clear plotMarker
        % Control
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,3,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*2; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 1 0],'LineWidth',1.5)
        clear plotMarker
        % Relatives
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,3,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*3; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 1],'LineWidth',1.5)
        clear plotMarker
        % Psychosis
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,3,:),3)]) + yRangeCorr(iB,2)-yRangeCorrOffset*4; % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[1 0 0],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[0 length(options.timeWindow)],...
            'xtick',round(linspace(1,length(options.timeWindow),5)),...
            'xticklabels',round(options.timeWindow(round(linspace(1,length(options.timeWindow),5))),-2)./1000,...
            'ylim',yRangeCorr(iB,:))
%         legend({'Controls','Relatives','Psychosis'},'FontSize',7,'Location','NorthWest')
        if iB == 1
            title('Pupil Size Surrounding Reported Switch (Real Switch)')
        elseif iB == 2
            title('Pupil Size Surrounding Reported Switch (Illusory Switch)')
        end
        xlabel('Time Relative to Event Onset (s)')
        ylabel('Pupil Size (% change)')
        box off
        set(gca,'XColor','k','YColor','k')
    end
end

%% Plot averaged data for full and group seperately w/ pre/post averages
if options.displayETFigs
    % Group colors
    col_list{1} = [0 1 0];
    col_list{2} = [0 0 1];
    col_list{3} = [1 0 0];
    yRangeCorrAve(1,:) = [-5 12];
    yRangeCorrAve(2,:) = [-5 6];
    statsOffsetY = 1;
    prePostTitle = {'Real Switch Task','Bi-stable Task'};
    for iB=1:length(options.runType)
        pupSizeFigAve(iB) = figure();
        figSize.baseSize = get(0,'Screensize');   % Base size in pixels
        figSize.aspectRatio = [11.2862 6.3476];   % Aspect ratio
        figSize.figSize = [0 0 ...
            figSize.baseSize(3)*.75 ...
            (figSize.baseSize(3)*.75)*(figSize.aspectRatio(2)/figSize.aspectRatio(1))];   % Size/postion of fig
        set(gcf,'color','w')
        set(gcf,'Position', figSize.figSize)
        set(0, 'DefaultFigureRenderer', 'painters');
        addpath(genpath('/home/shaw-raid1/matlab_tools/css_phcp_analysis.git'))
        
        %% Plot grand average
        subplot(4,2,[1])
                % Plot windows of baseline
%         plot([baselineRange(1) baselineRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
%         plot([baselineRange(end) baselineRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
        
        % Plot windows of pre switch
%         plot([preEventRange(1) preEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
%         plot([preEventRange(end) preEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
        patch([preEventRange(1),preEventRange(end),preEventRange(end),preEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.6 .6 .6],'LineStyle','none')
        hold on
        
        % Plot windows of post switch
%         plot([postEventRange(1) postEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
%         plot([postEventRange(end) postEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
        patch([postEventRange(1),postEventRange(end),postEventRange(end),postEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.9 .9 .9],'LineStyle','none')
        
        % Plot time
        %     plot(data.invCorr.B.corrData_blink_aveFull(3,:),'Color',[0 0 0])
        % Plot error shades for the line
        % function h = mpsErrorplot(x, y, e, plotColor, ebColor, ebAlpha)
        % plot color is the line color
        % eb color is the background shading for the error
        % and then ebAlpha is an optional transparency value
        mpsErrorplot([1:length(options.timeWindow)],data.pupSize.(options.runType{iB}).pupSizeData_aveFull_corr(3,:),...
            data.pupSize.(options.runType{iB}).pupSizeData_steFull_corr(3,:),[0 0 0],[0 0 0],.25);
        hold on
        
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Mark 0 point
        plot([1 length(options.timeWindow)],[0 0],'k','LineWidth',1.5);
        
        % Plot significance markers
        % Full average
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(3,:),2)]) + yRangeCorr(iB,2); % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeFull_Corr(3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 0],'LineWidth',1.5)
        clear plotMarker
                
        set(gca,'xlim',[find(options.timeWindow==-2000) find(options.timeWindow==2000)],...
            'xtick',[find(options.timeWindow==-2000) find(options.timeWindow==-1000) ...
            find(options.timeWindow==0) find(options.timeWindow==1000) find(options.timeWindow==2000)],...
            'xticklabels',[],...
            'ylim',yRangeCorr(iB,:))
        title(sprintf('%s%d%s', 'Average Pupil Size During Switch (Grand Average, n = ',...
            length(data.et.B.grpIdx{1}) + length(data.et.B.grpIdx{2}) + length(data.et.B.grpIdx{3}),...
            ')'))
        box off
        set(gca,'XColor','k','YColor','k')
        
        % Plot averaged time windows
        subplot(4,2,2)
        hb = bar([data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveFull_corr(3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveFull_corr(3)]);
        hold on
        errorbar([1:2],...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveFull_corr(3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveFull_corr(3)], ...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_steFull_corr(3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_steFull_corr(3)], ...
            '.k','linewidth',2)
        
        % Plot stats
        if data.pupSize.(options.runType{iB}).stats.ttest.P_prePostFull_Corr(3)<0.001
            pPlotHolder1 = sprintf('%s%.3f',', p<',0.001);
        else
            pPlotHolder1 = sprintf('%s%.3f',', p=',...
                data.pupSize.(options.runType{iB}).stats.ttest.P_prePostFull_Corr(3));
        end
        text(.75,yRangeCorrAve(iB,2)-statsOffsetY,sprintf('%s%d%s%.3f%s',...
            'Pre vs Post sig.: t(',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostFull_Corr(3).df,')=',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostFull_Corr(3).tstat,...
            pPlotHolder1),...
            'FontSize',6);
        clear pPlotHolder1
        
        set(gca,'XTick',1:2,'XTickLabel',[],'fontsize',10,...
            'YLim',yRangeCorrAve(iB,:))
        set(hb,'linewidth',2)
        hb(1).FaceColor = [0 0 0];
        set(gca,'XTick',1:3,'fontsize',7)
        
        box off
        set(gca,'XColor','k','YColor','k')
        title('Averaged Time Windows (Grand Average)')
        
        %% Plot controls
        % Plot time
        subplot(4,2,[3])
        % Plot windows of baseline
%         plot([baselineRange(1) baselineRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
%         plot([baselineRange(end) baselineRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
        
        % Plot windows of pre switch
%         plot([preEventRange(1) preEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
%         plot([preEventRange(end) preEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
        patch([preEventRange(1),preEventRange(end),preEventRange(end),preEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.6 .6 .6],'LineStyle','none')
        hold on
        
        % Plot windows of post switch
%         plot([postEventRange(1) postEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
%         plot([postEventRange(end) postEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
        patch([postEventRange(1),postEventRange(end),postEventRange(end),postEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.9 .9 .9],'LineStyle','none')
        
        %     plot(data.invCorr.B.corrData_blink_aveFull(3,:),'Color',[0 0 0])
        % Plot error shades for the line
        % function h = mpsErrorplot(x, y, e, plotColor, ebColor, ebAlpha)
        % plot color is the line color
        % eb color is the background shading for the error
        % and then ebAlpha is an optional transparency value
        mpsErrorplot([1:length(options.timeWindow)],squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(1,3,:)),...
            squeeze(data.pupSize.(options.runType{iB}).pupSizeData_steGrp_corr(1,3,:)),[0 1 0],[0 1 0],.25);
        hold on
        
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Mark 0 point
        plot([1 length(options.timeWindow)],[0 0],'k','LineWidth',1.5);
        
        % Plot significance markers
        % Control
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,3,:),3)]) + yRangeCorr(iB,2); % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(1,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 1 0],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[find(options.timeWindow==-2000) find(options.timeWindow==2000)],...
            'xtick',[find(options.timeWindow==-2000) find(options.timeWindow==-1000) ...
            find(options.timeWindow==0) find(options.timeWindow==1000) find(options.timeWindow==2000)],...
            'xticklabels',[],...
            'ylim',yRangeCorr(iB,:))
        title(sprintf('%s%d%s', 'Average Pupil Size During Switch (Controls, n = ',...
            length(data.et.B.grpIdx{1}),...
            ')'))
        box off
        set(gca,'XColor','k','YColor','k')
        
        % Plot averaged time windows
        subplot(4,2,4)
        hb = bar([data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(1,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(1,3)]);
        hold on
        errorbar([1:2],...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(1,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(1,3)], ...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(1,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(1,3)], ...
            '.k','linewidth',2)
        
        % Plot stats
        if data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(3,1)<0.001
            pPlotHolder1 = sprintf('%s%.3f',', p<',0.001);
        else
            pPlotHolder1 = sprintf('%s%.3f',', p=',...
                data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(3,1));
        end
        text(.75,yRangeCorrAve(iB,2)-statsOffsetY,sprintf('%s%d%s%.3f%s',...
            'Pre vs Post sig.: t(',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(3,1).df,')=',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(3,1).tstat,...
            pPlotHolder1),...
            'FontSize',6);
        clear pPlotHolder1
        
        set(gca,'XTick',1:2,'XTickLabel',[],'fontsize',10,...
            'YLim',yRangeCorrAve(iB,:))
        set(hb,'linewidth',2)
        hb(1).FaceColor = col_list{1};
        set(gca,'XTick',1:3,'fontsize',7)
        
        box off
        set(gca,'XColor','k','YColor','k')
        title('Averaged Time Windows (Controls)')
        
        %% Plot relatives
        % Plot time
        subplot(4,2,5)
        % Plot windows of baseline
%         plot([baselineRange(1) baselineRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
%         plot([baselineRange(end) baselineRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
        
        % Plot windows of pre switch
%         plot([preEventRange(1) preEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
%         plot([preEventRange(end) preEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
        patch([preEventRange(1),preEventRange(end),preEventRange(end),preEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.6 .6 .6],'LineStyle','none')
        hold on
        
        % Plot windows of post switch
%         plot([postEventRange(1) postEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
%         plot([postEventRange(end) postEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
        patch([postEventRange(1),postEventRange(end),postEventRange(end),postEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.9 .9 .9],'LineStyle','none')
        
        %     plot(data.invCorr.B.corrData_blink_aveFull(3,:),'Color',[0 0 0])
        % Plot error shades for the line
        % function h = mpsErrorplot(x, y, e, plotColor, ebColor, ebAlpha)
        % plot color is the line color
        % eb color is the background shading for the error
        % and then ebAlpha is an optional transparency value
        mpsErrorplot([1:length(options.timeWindow)],squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(2,3,:)),...
            squeeze(data.pupSize.(options.runType{iB}).pupSizeData_steGrp_corr(2,3,:)),[0 0 1],[0 0 1],.25);
        hold on
        
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Mark 0 point
        plot([1 length(options.timeWindow)],[0 0],'k','LineWidth',1.5);
        
        % Plot significance markers
        % Relatives
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,3,:),3)]) + yRangeCorr(iB,2); % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(2,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[0 0 1],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[find(options.timeWindow==-2000) find(options.timeWindow==2000)],...
            'xtick',[find(options.timeWindow==-2000) find(options.timeWindow==-1000) ...
            find(options.timeWindow==0) find(options.timeWindow==1000) find(options.timeWindow==2000)],...
            'xticklabels',[],...
            'ylim',yRangeCorr(iB,:))
        title(sprintf('%s%d%s', 'Average Pupil Size During Switch (Relatives, n = ',...
            length(data.et.B.grpIdx{2}),...
            ')'))
        box off
        set(gca,'XColor','k','YColor','k')
        
        % Plot averaged time windows
        subplot(4,2,6)
        hb = bar([data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(2,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(2,3)]);
        hold on
        errorbar([1:2],...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(2,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(2,3)], ...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(2,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(2,3)], ...
            '.k','linewidth',2)
        
        % Plot stats
        if data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(3,2)<0.001
            pPlotHolder1 = sprintf('%s%.3f',', p<',0.001);
        else
            pPlotHolder1 = sprintf('%s%.3f',', p=',...
                data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(3,2));
        end
        text(.75,yRangeCorrAve(iB,2)-statsOffsetY,sprintf('%s%d%s%.3f%s%.3f',...
            'Pre vs Post sig.: t(',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(3,2).df,')=',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(3,2).tstat,...
            pPlotHolder1),...
            'FontSize',6);
        clear pPlotHolder1
        
        set(gca,'XTick',1:2,'XTickLabel',[],'fontsize',10,...
            'YLim',yRangeCorrAve(iB,:))
        set(hb,'linewidth',2)
        hb(1).FaceColor = col_list{2};
        set(gca,'XTick',1:3,'fontsize',7)
        
        box off
        set(gca,'XColor','k','YColor','k')
        title('Averaged Time Windows (Relatives)')
        
        %% Plot psychosis
        % Plot time
        subplot(4,2,7)
        % Plot windows of baseline
%         plot([baselineRange(1) baselineRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
%         plot([baselineRange(end) baselineRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.9 .9 .9],'LineWidth',1);
        
        % Plot windows of pre switch
%         plot([preEventRange(1) preEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
%         plot([preEventRange(end) preEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.6 .6 .6],'LineWidth',1);
        patch([preEventRange(1),preEventRange(end),preEventRange(end),preEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.6 .6 .6],'LineStyle','none')
        hold on
        
        % Plot windows of post switch
%         plot([postEventRange(1) postEventRange(1)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
%         plot([postEventRange(end) postEventRange(end)],...
%             yRangeCorr(iB,:),'--','Color',[.3 .3 .3],'LineWidth',1);
        patch([postEventRange(1),postEventRange(end),postEventRange(end),postEventRange(1)],...
            [yRangeCorr(iB,1),yRangeCorr(iB,1),yRangeCorr(iB,end),yRangeCorr(iB,end)],...
            [.9 .9 .9],'LineStyle','none')
        
        %     plot(data.invCorr.B.corrData_blink_aveFull(3,:),'Color',[0 0 0])
        % Plot error shades for the line
        % function h = mpsErrorplot(x, y, e, plotColor, ebColor, ebAlpha)
        % plot color is the line color
        % eb color is the background shading for the error
        % and then ebAlpha is an optional transparency value
        mpsErrorplot([1:length(options.timeWindow)],squeeze(data.pupSize.(options.runType{iB}).pupSizeData_aveGrp_corr(3,3,:)),...
            squeeze(data.pupSize.(options.runType{iB}).pupSizeData_steGrp_corr(3,3,:)),[1 0 0],[1 0 0],.25);
        hold on
        
        % Mark behav event onset
        plot([find(options.timeWindow==0) find(options.timeWindow==0)],...
            yRangeCorr(iB,:),'k','LineWidth',1.5)
        
        % Mark 0 point
        plot([1 length(options.timeWindow)],[0 0],'k','LineWidth',1.5);
        
        % Plot significance markers
        % Psychosis
        plotMarker = zeros([1 size(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,3,:),3)]) + yRangeCorr(iB,2); % Plot val
        plotMarker(data.pupSize.(options.runType{iB}).stats.ttest.Sig_allTimeGrp_Corr(3,3,:)==0) = NaN;
        plot([1:length(options.timeWindow)], plotMarker,'Color',[1 0 0],'LineWidth',1.5)
        clear plotMarker
        
        set(gca,'xlim',[find(options.timeWindow==-2000) find(options.timeWindow==2000)],...
            'xtick',[find(options.timeWindow==-2000) find(options.timeWindow==2000)],...
            'xtick',[find(options.timeWindow==-2000) find(options.timeWindow==-1000) ...
            find(options.timeWindow==0) find(options.timeWindow==1000) find(options.timeWindow==2000)],...
            'xticklabels',options.timeWindow([find(options.timeWindow==-2000) find(options.timeWindow==-1000) ...
            find(options.timeWindow==0) find(options.timeWindow==1000) find(options.timeWindow==2000)])./1000,...
            'ylim',yRangeCorr(iB,:))
        title(sprintf('%s%d%s', 'Average Pupil Size During Switch (PwPP, n = ',...
            length(data.et.B.grpIdx{3}),...
            ')'))
        xlabel('Time Relative to Event Onset (s)')
        box off
        set(gca,'XColor','k','YColor','k')
        
        % Plot averaged time windows
        subplot(4,2,8)
        hb = bar([data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(3,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(3,3)]);
        hold on
        errorbar([1:2],...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(3,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(3,3)], ...
            [data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(3,3) ...
            data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(3,3)], ...
            '.k','linewidth',2)
        
        % Plot stats
        if data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(3,3)<0.001
            pPlotHolder1 = sprintf('%s%.3f',', p<',0.001);
        else
            pPlotHolder1 = sprintf('%s%.3f',', p=',...
                data.pupSize.(options.runType{iB}).stats.ttest.P_prePostGrp_Corr(3,3));
        end
        text(.75,yRangeCorrAve(iB,2)-statsOffsetY,sprintf('%s%d%s%.3f%s',...
            'Pre vs Post sig.: t(',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(3,3).df,')=',...
            data.pupSize.(options.runType{iB}).stats.ttest.Stats_prePostGrp_Corr(3,3).tstat,...
            pPlotHolder1),...
            'FontSize',6);
        clear pPlotHolder1
        
        set(gca,'XTick',1:2,'XTickLabel',{'Pre-switch','Post-switch'},'fontsize',10,...
            'YLim',yRangeCorrAve(iB,:))
        set(hb,'linewidth',2)
        hb(1).FaceColor = col_list{3};
        set(gca,'XTick',1:3,'fontsize',7)
        box off
        set(gca,'XColor','k','YColor','k')
        title('Averaged Time Windows (Psychosis)')
        % Add figure y axis title
        han=axes(pupSizeFigAve(iB),'visible','off');
        han.YLabel.Visible = 'on';
        ylabel(han,sprintf('%s','Pupil Size (% change)'),'FontSize',12)
        suptitle(prePostTitle{iB})
    end
end

%% Plot pre and post windows for each group
prePostTitle = {'Real Switch Task - Pupil Size','Bi-stable Task - Pupil Size'};
yRangeCorrAve(1,:) = [-10 20];
yRangeCorrAve(2,:) = [-8 10];
statsPlotOffsetY(1) = .8;
statsPlotOffsetY(2) = .5;
statsPlotOffsetX = 1.6;
for iB = 1:length(options.runType)
    prePostEventFig(iB) = figure();
    figSize.baseSize = get(0,'Screensize');   % Base size in pixels
    figSize.aspectRatio = [4.5145 2.12];   % Aspect ratio
    figSize.figSize = [0 0 ...
        figSize.baseSize(3)*.75 ...
        (figSize.baseSize(3)*.75)*(figSize.aspectRatio(2)/figSize.aspectRatio(1))];   % Size/postion of fig
    set(gcf,'color','w')
    set(gcf,'Position', figSize.figSize)
    
    %% Pre
    subplot(1,2,1)
    hb1 = bar(1,[data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(1,3)]);
    hold on
    hb2 = bar(2,[data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(2,3)]);
    hb3 = bar(3,[data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(3,3)]);
    errorbar([1:3],...
        [data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(1,3) ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(2,3) ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_aveGroup_corr(3,3)], ...
        [data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(1,3) ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(2,3) ...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch_steGroup_corr(3,3)], ...
        '.k','linewidth',2);
    
    % Plot beeswarms
    x_val = [hb1.XData hb2.XData hb3.XData];
    bee_bin_width = .1;
    bee_spread_width = 1.25;
    beePlot = plotSpread({data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
        data.pupSize.(options.runType{iB}).grpIdx{1},3),...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
        data.pupSize.(options.runType{iB}).grpIdx{2},3),...
        data.pupSize.(options.runType{iB}).pupSize_preSwitch(...
        data.pupSize.(options.runType{iB}).grpIdx{3},3)},...
        'binWidth', bee_bin_width,...
        'distributionColors', {[.5 .5 .5]},...
        'xValues', x_val,...
        'spreadWidth', bee_spread_width);
    set(beePlot{1},'MarkerSize',10)
    
    % Plot stats
    % ANOVAN
    text(statsPlotOffsetX,yRangeCorrAve(iB,2)-statsPlotOffsetY(iB),sprintf('%s%d%s%d%s%.3f%s%.3f%s%.3f',...
        'Pre-Event sig.: F(',...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_preEvent_Corr{2,3},',',...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_preEvent_Corr{5,3},')=',...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_preEvent_Corr{2,6},...
        ', p=',data.pupSize.(options.runType{iB}).stats.anova1.Table_preEvent_Corr{2,7}),...
        'FontSize',6);
    % KW3
    text(statsPlotOffsetX,yRangeCorrAve(iB,2)-statsPlotOffsetY(iB)*2,sprintf('%s%d%s%.3f%s%.3f%s%.3f',...
        'Pre-Event sig.: X2(',...
        data.pupSize.(options.runType{iB}).stats.KW3.Table_preEvent_Corr{2,3},')=',...
        data.pupSize.(options.runType{iB}).stats.KW3.Table_preEvent_Corr{2,5},...
        ', p=',data.pupSize.(options.runType{iB}).stats.KW3.Table_preEvent_Corr{2,6}),...
        'FontSize',6);
    % KW2 - Controls vs Psychosis
    text(statsPlotOffsetX,yRangeCorrAve(iB,2)-statsPlotOffsetY(iB)*3,sprintf('%s%d%s%.3f%s%.3f%s%.3f',...
        'Pre-Event (CvP) sig.: X2(',...
        data.pupSize.(options.runType{iB}).stats.KW2.Table_preEvent_Corr{2,3},')=',...
        data.pupSize.(options.runType{iB}).stats.KW2.Table_preEvent_Corr{2,5},...
        ', p=',data.pupSize.(options.runType{iB}).stats.KW2.Table_preEvent_Corr{2,6}),...
        'FontSize',6);
    
    set(gca,'XTick',1:3,'XLim',[.5 3.5],'XTickLabel',{sprintf('%s%d%s','Controls (n=',length(data.et.B.grpIdx{1}),')'),...
        sprintf('%s%d%s','Relatives (n=',length(data.et.B.grpIdx{2}),')'),...
        sprintf('%s%d%s','PwPP (n=',length(data.et.B.grpIdx{3}),')')},...
        'YLim',yRangeCorrAve(iB,:),'fontsize',12)
    set(hb1,'linewidth',2)
    set(hb2,'linewidth',2)
    set(hb3,'linewidth',2)
    hb1(1).FaceColor = col_list{1};
    hb2(1).FaceColor = col_list{2};
    hb3(1).FaceColor = col_list{3};
    
    box off
    ylabel('Pupil Size (% change)')
    set(gca,'XColor','k','YColor','k')
    title('Averaged Time Windows (Pre Event)')
    
    %% Post
    subplot(1,2,2)
    hb1 = bar(1,[data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(1,3)]);
    hold on
    hb2 = bar(2,[data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(2,3)]);
    hb3 = bar(3,[data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(3,3)]);
    errorbar([1:3],...
        [data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(1,3) ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(2,3) ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_aveGroup_corr(3,3)], ...
        [data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(1,3) ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(2,3) ...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch_steGroup_corr(3,3)], ...
        '.k','linewidth',2);
    
    % Plot beeswarms
    x_val = [hb1.XData hb2.XData hb3.XData];
    bee_bin_width = .1;
    bee_spread_width = 1.25;
    beePlot = plotSpread({data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
        data.pupSize.(options.runType{iB}).grpIdx{1},3),...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
        data.pupSize.(options.runType{iB}).grpIdx{2},3),...
        data.pupSize.(options.runType{iB}).pupSize_postSwitch(...
        data.pupSize.(options.runType{iB}).grpIdx{3},3)},...
        'binWidth', bee_bin_width,...
        'distributionColors', {[.5 .5 .5]},...
        'xValues', x_val,...
        'spreadWidth', bee_spread_width);
    set(beePlot{1},'MarkerSize',10)
    
    % Plot stats
    % ANOVAN
    text(statsPlotOffsetX,yRangeCorrAve(iB,2)-statsPlotOffsetY(iB),sprintf('%s%d%s%d%s%.3f%s%.3f%s%.3f',...
        'Post-Event sig.: F(',...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_postEvent_Corr{2,3},',',...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_postEvent_Corr{5,3},')=',...
        data.pupSize.(options.runType{iB}).stats.anova1.Table_postEvent_Corr{2,6},...
        ', p=',data.pupSize.(options.runType{iB}).stats.anova1.Table_postEvent_Corr{2,7}),...
        'FontSize',6);
    % KW3
    text(statsPlotOffsetX,yRangeCorrAve(iB,2)-statsPlotOffsetY(iB)*2,sprintf('%s%d%s%.3f%s%.3f%s%.3f',...
        'Post-Event sig.: X2(',...
        data.pupSize.(options.runType{iB}).stats.KW3.Table_postEvent_Corr{2,3},')=',...
        data.pupSize.(options.runType{iB}).stats.KW3.Table_postEvent_Corr{2,5},...
        ', p=',data.pupSize.(options.runType{iB}).stats.KW3.Table_postEvent_Corr{2,6}),...
        'FontSize',6);
    % KW2 - Controls vs Psychosis
    text(statsPlotOffsetX,yRangeCorrAve(iB,2)-statsPlotOffsetY(iB)*3,sprintf('%s%d%s%.3f%s%.3f%s%.3f',...
        'Pre-Event  (CvP) sig.: X2(',...
        data.pupSize.(options.runType{iB}).stats.KW2.Table_postEvent_Corr{2,3},')=',...
        data.pupSize.(options.runType{iB}).stats.KW2.Table_postEvent_Corr{2,5},...
        ', p=',data.pupSize.(options.runType{iB}).stats.KW2.Table_postEvent_Corr{2,6}),...
        'FontSize',6);
    
    set(gca,'XTick',1:3,'XLim',[.5 3.5],'XTickLabel',{sprintf('%s%d%s','Controls (n=',length(data.et.B.grpIdx{1}),')'),...
        sprintf('%s%d%s','Relatives (n=',length(data.et.B.grpIdx{2}),')'),...
        sprintf('%s%d%s','PwPP (n=',length(data.et.B.grpIdx{3}),')')},...
        'YLim',yRangeCorrAve(iB,:),'fontsize',12)
    set(hb1,'linewidth',2)
    set(hb2,'linewidth',2)
    set(hb3,'linewidth',2)
    hb1(1).FaceColor = col_list{1};
    hb2(1).FaceColor = col_list{2};
    hb3(1).FaceColor = col_list{3};
    
    box off
%     ylabel('Pupil Size (% change)')
    set(gca,'XColor','k','YColor','k')
    title('Averaged Time Windows (Post Event)')
    
    suptitle(prePostTitle{iB});
end

end